#include <PartyKel/glm.hpp>
#include <cstdio>

__global__ void leapFrogKernel(bool* fxd, glm::vec3* pos, glm::vec3* vel, glm::vec3* frc, float* mass, int count)
{
	const float dt = 1/500.f;

	// unique block index inside a 3D block grid
	const unsigned long long int blockId = blockIdx.x //1D
	        + blockIdx.y * gridDim.x; //2D

	const unsigned long long int threadId = threadIdx.x + threadIdx.y * blockDim.x;

	const unsigned long long int id = blockId * blockDim.x * blockDim.y + threadId;

	if(id < count)
	{
		if(!fxd[id])
		{
			vel[id] += frc[id]*dt/mass[id];
			pos[id] += vel[id]*dt;
		}
		frc[id] = glm::vec3(0,0,0);
	}
}